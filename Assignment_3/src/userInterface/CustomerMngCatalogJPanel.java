/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface;

import business.Catalog;
import business.CatalogDirectory;
import business.VendorDirectory;
import java.awt.CardLayout;
import java.awt.Font;
import java.util.Iterator;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Siddhant
 */
public class CustomerMngCatalogJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private CatalogDirectory catalogDirectory;
    private VendorDirectory vendorDirectory;

    /**
     * Creates new form CustomerMngCatalogJPanel
     */
    CustomerMngCatalogJPanel(JPanel userProcessContainer, CatalogDirectory catalogDirectory, VendorDirectory vendorDirectory) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.catalogDirectory = catalogDirectory;
        this.vendorDirectory = vendorDirectory;
        tblCustomerCatalog.getTableHeader().setFont(new Font("Tahoma", Font.BOLD, 16));
        populateTable();
    }

    public void populateTable() {
        DefaultTableModel dtm = (DefaultTableModel) tblCustomerCatalog.getModel();
        dtm.setRowCount(0);
        for (Catalog catalog : catalogDirectory.getCataloglist()) {
            Object[] row = new Object[5];
            row[0] = catalog;
            row[1] = catalog.getModelNumber();
            row[2] = catalog.getVendorName();
            row[3] = catalog.getProdBasePrice();
            //row[4] = catalog.getProductDescription();
            dtm.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblCustomerCatalog = new javax.swing.JTable();
        txtSearchbyProductName = new javax.swing.JTextField();
        txtSearchbyModelNumber = new javax.swing.JTextField();
        btnViewDetail = new javax.swing.JButton();
        btnSearchbyProductName = new javax.swing.JButton();
        btnResetFilter = new javax.swing.JButton();
        btnSearchbyModelNumber = new javax.swing.JButton();
        btnSearchByVendorName = new javax.swing.JButton();
        txtSearchbyVendorName = new javax.swing.JTextField();
        btnSearchByBasePrice = new javax.swing.JButton();
        txtSearchbyBasePrice = new javax.swing.JTextField();

        tblCustomerCatalog.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product Name", "Model Number", "Vendor Name", "Base Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblCustomerCatalog);

        txtSearchbyProductName.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        txtSearchbyModelNumber.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        btnViewDetail.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btnViewDetail.setText("View Detail");
        btnViewDetail.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnViewDetail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewDetailActionPerformed(evt);
            }
        });

        btnSearchbyProductName.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btnSearchbyProductName.setText("Search by Product Name:");
        btnSearchbyProductName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnSearchbyProductName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchbyProductNameActionPerformed(evt);
            }
        });

        btnResetFilter.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btnResetFilter.setText("Reset Filter");
        btnResetFilter.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnResetFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetFilterActionPerformed(evt);
            }
        });

        btnSearchbyModelNumber.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btnSearchbyModelNumber.setText("Search by Model Number:");
        btnSearchbyModelNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchbyModelNumberActionPerformed(evt);
            }
        });

        btnSearchByVendorName.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btnSearchByVendorName.setText("Search by Vendor Name:");
        btnSearchByVendorName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchByVendorNameActionPerformed(evt);
            }
        });

        txtSearchbyVendorName.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        btnSearchByBasePrice.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btnSearchByBasePrice.setText("Ssearch by Base Price:");
        btnSearchByBasePrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchByBasePriceActionPerformed(evt);
            }
        });

        txtSearchbyBasePrice.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(122, 122, 122)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 694, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(225, 225, 225)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(btnSearchByBasePrice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnResetFilter, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(btnSearchbyProductName, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE)
                                .addComponent(btnSearchbyModelNumber, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(btnSearchByVendorName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtSearchbyProductName, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                            .addComponent(btnViewDetail, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSearchbyModelNumber, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                            .addComponent(txtSearchbyVendorName)
                            .addComponent(txtSearchbyBasePrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(130, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnSearchByBasePrice, btnSearchByVendorName, btnSearchbyModelNumber, btnSearchbyProductName, txtSearchbyBasePrice, txtSearchbyModelNumber, txtSearchbyProductName, txtSearchbyVendorName});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnResetFilter, btnViewDetail});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSearchbyProductName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSearchbyProductName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSearchbyModelNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearchbyModelNumber))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSearchByVendorName)
                    .addComponent(txtSearchbyVendorName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSearchByBasePrice)
                    .addComponent(txtSearchbyBasePrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnViewDetail, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnResetFilter))
                .addContainerGap(142, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnSearchByBasePrice, btnSearchByVendorName, btnSearchbyModelNumber, btnSearchbyProductName, txtSearchbyBasePrice, txtSearchbyModelNumber, txtSearchbyProductName, txtSearchbyVendorName});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnResetFilter, btnViewDetail});

    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchbyProductNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchbyProductNameActionPerformed
        // TODO add your handling code here:
        String ProductName = txtSearchbyProductName.getText();
        if ((ProductName.isEmpty()) || (ProductName.startsWith(" "))) {
            JOptionPane.showMessageDialog(this, "Please enter Product Name", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

         {
            //enter the code here to update the table automatically
            DefaultTableModel dtm = (DefaultTableModel) tblCustomerCatalog.getModel();
            dtm.setRowCount(0);

            for (Iterator<Catalog> it = catalogDirectory.getCataloglist().iterator(); it.hasNext();) {
                Catalog catalog1 = it.next();
                if (catalog1.getProductName().contains(txtSearchbyProductName.getText())) {
                    Object[] row = new Object[4];
                    row[0] = catalog1;
                    row[1] = catalog1.getModelNumber();
                    row[2] = catalog1.getVendorName();
                    row[3] = catalog1.getProdBasePrice();
                    //row[4] = catalog1.getProductDescription();
                    dtm.addRow(row);

                    // populateTable();
                }
            }
        }
         if(tblCustomerCatalog.getRowCount()==0){
            JOptionPane.showMessageDialog(this, "Model Number does not exist","Warning", JOptionPane.WARNING_MESSAGE );
        }
        
    }//GEN-LAST:event_btnSearchbyProductNameActionPerformed

    private void btnViewDetailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewDetailActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblCustomerCatalog.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select any row", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            Catalog catalog = (Catalog) tblCustomerCatalog.getValueAt(selectedRow, 0);
            CustomerViewCatalogJPanel panel = new CustomerViewCatalogJPanel(userProcessContainer, catalog);
            userProcessContainer.add("CustomerViewCatalogJPanel", panel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }
    }//GEN-LAST:event_btnViewDetailActionPerformed

    private void btnResetFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetFilterActionPerformed
        // TODO add your handling code here:
        populateTable();
        txtSearchbyProductName.setText("");
        txtSearchbyModelNumber.setText("");
        txtSearchbyVendorName.setText("");
        txtSearchbyBasePrice.setText("");
    }//GEN-LAST:event_btnResetFilterActionPerformed

    private void btnSearchbyModelNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchbyModelNumberActionPerformed
        // TODO add your handling code here:
        String ModelNumber = txtSearchbyModelNumber.getText();
        if ((ModelNumber.isEmpty()) || (ModelNumber.startsWith(" "))) {
            JOptionPane.showMessageDialog(this, "Please enter Model Number", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        /*Catalog catalog = catalogDirectory.searchCatalog(ModelNumber);
        if (catalog == null) {
            JOptionPane.showMessageDialog(this, "Model Number does not exist", "Information", JOptionPane.INFORMATION_MESSAGE);
        } else {*/
        //enter the code here to update the table automatically
        DefaultTableModel dtm = (DefaultTableModel) tblCustomerCatalog.getModel();
        dtm.setRowCount(0);

        for (Iterator<Catalog> it = catalogDirectory.getCataloglist().iterator(); it.hasNext();) {
            Catalog catalog1 = it.next();
            if (catalog1.getModelNumber().contains(txtSearchbyModelNumber.getText())) {
                Object[] row = new Object[4];
                row[0] = catalog1;
                row[1] = catalog1.getModelNumber();
                row[2] = catalog1.getVendorName();
                row[3] = catalog1.getProdBasePrice();
                //row[4] = catalog1.getProductDescription();
                dtm.addRow(row);

                // populateTable();
                //}
            }
        }
        if(tblCustomerCatalog.getRowCount()==0){
            JOptionPane.showMessageDialog(this, "Model Number does not exist","Warning", JOptionPane.WARNING_MESSAGE );
        }
    }//GEN-LAST:event_btnSearchbyModelNumberActionPerformed

    private void btnSearchByVendorNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchByVendorNameActionPerformed
        // TODO add your handling code here:
        String VendorName = txtSearchbyVendorName.getText();
        if ((VendorName.isEmpty()) || (VendorName.startsWith(" "))) {
            JOptionPane.showMessageDialog(this, "Please enter Vendor Name", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        /*Catalog catalog = catalogDirectory.searchCatalog(ModelNumber);
        if (catalog == null) {
            JOptionPane.showMessageDialog(this, "Model Number does not exist", "Information", JOptionPane.INFORMATION_MESSAGE);
        } else {*/
        //enter the code here to update the table automatically
        DefaultTableModel dtm = (DefaultTableModel) tblCustomerCatalog.getModel();
        dtm.setRowCount(0);

        for (Iterator<Catalog> it = catalogDirectory.getCataloglist().iterator(); it.hasNext();) {
            Catalog catalog1 = it.next();
            if (catalog1.getVendorName().contains(txtSearchbyVendorName.getText())) {
                Object[] row = new Object[4];
                row[0] = catalog1;
                row[1] = catalog1.getModelNumber();
                row[2] = catalog1.getVendorName();
                row[3] = catalog1.getProdBasePrice();
                //row[4] = catalog1.getProductDescription();
                dtm.addRow(row);

                // populateTable();
                //}
            }
        }
        if(tblCustomerCatalog.getRowCount()==0){
            JOptionPane.showMessageDialog(this, "Vendor Name does not exist","Warning", JOptionPane.WARNING_MESSAGE );
        }
    }//GEN-LAST:event_btnSearchByVendorNameActionPerformed

    private void btnSearchByBasePriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchByBasePriceActionPerformed
        // TODO add your handling code here:
        String BasePrice = txtSearchbyBasePrice.getText();
        if ((BasePrice.isEmpty()) || (BasePrice.startsWith(" "))) {
            JOptionPane.showMessageDialog(this, "Please enter Base Price", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        /*Catalog catalog = catalogDirectory.searchCatalog(ModelNumber);
        if (catalog == null) {
            JOptionPane.showMessageDialog(this, "Model Number does not exist", "Information", JOptionPane.INFORMATION_MESSAGE);
        } else {*/
        //enter the code here to update the table automatically
        DefaultTableModel dtm = (DefaultTableModel) tblCustomerCatalog.getModel();
        dtm.setRowCount(0);

        for (Iterator<Catalog> it = catalogDirectory.getCataloglist().iterator(); it.hasNext();) {
            Catalog catalog1 = it.next();
            if (String.valueOf(catalog1.getProdBasePrice()).contains(txtSearchbyBasePrice.getText())) {
                Object[] row = new Object[4];
                row[0] = catalog1;
                row[1] = catalog1.getModelNumber();
                row[2] = catalog1.getVendorName();
                row[3] = catalog1.getProdBasePrice();
                //row[4] = catalog1.getProductDescription();
                dtm.addRow(row);

                // populateTable();
                //}
            }
        }
        if(tblCustomerCatalog.getRowCount()==0){
            JOptionPane.showMessageDialog(this, "Base Price does not exist","Warning", JOptionPane.WARNING_MESSAGE );
        }
    }//GEN-LAST:event_btnSearchByBasePriceActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnResetFilter;
    private javax.swing.JButton btnSearchByBasePrice;
    private javax.swing.JButton btnSearchByVendorName;
    private javax.swing.JButton btnSearchbyModelNumber;
    private javax.swing.JButton btnSearchbyProductName;
    private javax.swing.JButton btnViewDetail;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblCustomerCatalog;
    private javax.swing.JTextField txtSearchbyBasePrice;
    private javax.swing.JTextField txtSearchbyModelNumber;
    private javax.swing.JTextField txtSearchbyProductName;
    private javax.swing.JTextField txtSearchbyVendorName;
    // End of variables declaration//GEN-END:variables
}
